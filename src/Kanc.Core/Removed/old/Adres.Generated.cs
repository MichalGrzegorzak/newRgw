//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace Kanc.Data
{
    /// <summary>
    /// The class representing the dbo.Adres table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.Adres")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(Kanc.Data.Adres.Metadata))]
    [System.Data.Services.Common.DataServiceKey("Id")]
    [System.Diagnostics.DebuggerDisplay("Id: {Id}")]
    public class Adres2
        : LinqEntityBase, ICloneable 
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="Adres"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static Adres2()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Adres"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Adres2()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void Initialize()
        {
            _kraj = default(System.Data.Linq.EntityRef<Kraj>);
            _zameldRozliczenieList = new System.Data.Linq.EntitySet<Rozliczenie>(OnZameldRozliczenieListAdd, OnZameldRozliczenieListRemove);
            _korespRozliczenieList = new System.Data.Linq.EntitySet<Rozliczenie>(OnKorespRozliczenieListAdd, OnKorespRozliczenieListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _id = default(int);

        /// <summary>
        /// Gets the Id column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Id", Storage = "_id", DbType = "int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    SendPropertyChanging("Id");
                    _id = value;
                    SendPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _kod;

        /// <summary>
        /// Gets or sets the Kod column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Kod", Storage = "_kod", DbType = "nvarchar(255) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Kod
        {
            get { return _kod; }
            set
            {
                if (_kod != value)
                {
                    OnKodChanging(value);
                    SendPropertyChanging("Kod");
                    _kod = value;
                    SendPropertyChanged("Kod");
                    OnKodChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _miasto;

        /// <summary>
        /// Gets or sets the Miasto column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Miasto", Storage = "_miasto", DbType = "nvarchar(255) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Miasto
        {
            get { return _miasto; }
            set
            {
                if (_miasto != value)
                {
                    OnMiastoChanging(value);
                    SendPropertyChanging("Miasto");
                    _miasto = value;
                    SendPropertyChanged("Miasto");
                    OnMiastoChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _ulica;

        /// <summary>
        /// Gets or sets the Ulica column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Ulica", Storage = "_ulica", DbType = "nvarchar(255) NOT NULL", CanBeNull = false)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Ulica
        {
            get { return _ulica; }
            set
            {
                if (_ulica != value)
                {
                    OnUlicaChanging(value);
                    SendPropertyChanging("Ulica");
                    _ulica = value;
                    SendPropertyChanged("Ulica");
                    OnUlicaChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private string _miejsce;

        /// <summary>
        /// Gets or sets the Miejsce column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Miejsce", Storage = "_miejsce", DbType = "nvarchar(255)")]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public string Miejsce
        {
            get { return _miejsce; }
            set
            {
                if (_miejsce != value)
                {
                    OnMiejsceChanging(value);
                    SendPropertyChanging("Miejsce");
                    _miejsce = value;
                    SendPropertyChanged("Miejsce");
                    OnMiejsceChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private int _krajId;

        /// <summary>
        /// Gets or sets the KrajId column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "KrajId", Storage = "_krajId", DbType = "int NOT NULL", CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public int KrajId
        {
            get { return _krajId; }
            set
            {
                if (_krajId != value)
                {
                    if (_kraj.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnKrajIdChanging(value);
                    SendPropertyChanging("KrajId");
                    _krajId = value;
                    SendPropertyChanged("KrajId");
                    OnKrajIdChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntityRef<Kraj> _kraj;

        /// <summary>
        /// Gets or sets the <see cref="Kraj"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Kraj_Adres", Storage = "_kraj", ThisKey = "KrajId", OtherKey = "Id", IsUnique = true, IsForeignKey = true)]
        [System.Runtime.Serialization.DataMember(Order = 7, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Kraj Kraj
        {
            get { return (serializing && !_kraj.HasLoadedOrAssignedValue) ? null : _kraj.Entity; }
            set
            {
                Kraj previousValue = _kraj.Entity;
                if (previousValue != value || _kraj.HasLoadedOrAssignedValue == false)
                {
                    OnKrajChanging(value);
                    SendPropertyChanging("Kraj");
                    if (previousValue != null)
                    {
                        _kraj.Entity = null;
                        previousValue.AdresList.Remove(this);
                    }
                    _kraj.Entity = value;
                    if (value != null)
                    {
                        value.AdresList.Add(this);
                        _krajId = value.Id;
                    }
                    else
                    {
                        _krajId = default(int);
                    }
                    SendPropertyChanged("Kraj");
                    OnKrajChanged();
                }
            }
        }
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Rozliczenie> _zameldRozliczenieList;

        /// <summary>
        /// Gets or sets the <see cref="Rozliczenie"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Adres_Rozliczenie", Storage = "_zameldRozliczenieList", ThisKey = "Id", OtherKey = "AdresZameldId")]
        [System.Runtime.Serialization.DataMember(Order=8, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Rozliczenie> ZameldRozliczenieList
        {
            get { return (serializing && !_zameldRozliczenieList.HasLoadedOrAssignedValues) ? null : _zameldRozliczenieList; }
            set { _zameldRozliczenieList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnZameldRozliczenieListAdd(Rozliczenie entity)
        {
            SendPropertyChanging(null);
            entity.ZameldAdres = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnZameldRozliczenieListRemove(Rozliczenie entity)
        {
            SendPropertyChanging(null);
            entity.ZameldAdres = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private System.Data.Linq.EntitySet<Rozliczenie> _korespRozliczenieList;

        /// <summary>
        /// Gets or sets the <see cref="Rozliczenie"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "Adres_Rozliczenie1", Storage = "_korespRozliczenieList", ThisKey = "Id", OtherKey = "AdresKorespId")]
        [System.Runtime.Serialization.DataMember(Order=9, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public System.Data.Linq.EntitySet<Rozliczenie> KorespRozliczenieList
        {
            get { return (serializing && !_korespRozliczenieList.HasLoadedOrAssignedValues) ? null : _korespRozliczenieList; }
            set { _korespRozliczenieList.Assign(value); }
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnKorespRozliczenieListAdd(Rozliczenie entity)
        {
            SendPropertyChanging(null);
            entity.KorespAdres = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private void OnKorespRozliczenieListRemove(Rozliczenie entity)
        {
            SendPropertyChanging(null);
            entity.KorespAdres = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="Id"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanging(int value);
        /// <summary>Called after <see cref="Id"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnIdChanged();
        /// <summary>Called when <see cref="Kod"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKodChanging(string value);
        /// <summary>Called after <see cref="Kod"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKodChanged();
        /// <summary>Called when <see cref="Miasto"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMiastoChanging(string value);
        /// <summary>Called after <see cref="Miasto"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMiastoChanged();
        /// <summary>Called when <see cref="Ulica"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUlicaChanging(string value);
        /// <summary>Called after <see cref="Ulica"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnUlicaChanged();
        /// <summary>Called when <see cref="Miejsce"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMiejsceChanging(string value);
        /// <summary>Called after <see cref="Miejsce"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnMiejsceChanged();
        /// <summary>Called when <see cref="KrajId"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKrajIdChanging(int value);
        /// <summary>Called after <see cref="KrajId"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKrajIdChanged();
        /// <summary>Called when <see cref="Kraj"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKrajChanging(Kraj value);
        /// <summary>Called after <see cref="Kraj"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        partial void OnKrajChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="Adres"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="Adres"/> instance.</param>
        /// <returns>An instance of <see cref="Adres"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static Adres FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(Adres));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as Adres;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="Adres"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="Adres"/> instance.</param>
        /// <returns>An instance of <see cref="Adres"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public static Adres FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(Adres));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as Adres;
            }
        }
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public Adres Clone()
        {
            return (Adres)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "5.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _kraj = Detach(_kraj);
            _zameldRozliczenieList = Detach(_zameldRozliczenieList, OnZameldRozliczenieListAdd, OnZameldRozliczenieListRemove);
            _korespRozliczenieList = Detach(_korespRozliczenieList, OnKorespRozliczenieListAdd, OnKorespRozliczenieListRemove);
        }
        #endregion
    }
}

